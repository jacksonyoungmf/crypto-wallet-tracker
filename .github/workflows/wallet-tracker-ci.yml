name: Crypto Wallet Tracker CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Run every 4 hours to ensure continuous monitoring
    - cron: '0 */4 * * *'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv screen

    - name: Create Python virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip

    - name: Install Python dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
        pip install pytest flake8

    - name: Run linter
      run: |
        source venv/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
        BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}
      run: |
        source venv/bin/activate
        pytest tests/  # Assuming you'll add tests later

    - name: Verbose System and Environment Check
      run: |
        echo "Python version:"
        python3 --version
        echo "Pip version:"
        pip --version
        echo "Installed packages:"
        pip list
        echo "Environment variables:"
        env | grep -E 'TELEGRAM|ETHEREUM|BASE'

    - name: Deploy and Run Wallet Tracker
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
        BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}
      run: |
        source venv/bin/activate
        # Debugging: print contents of key files
        echo "Contents of wallet_tracker_bot.py:"
        cat wallet_tracker_bot.py
        
        # Try running the script and capture full output
        python3 wallet_tracker_bot.py &
        TRACKER_PID=$!
        sleep 30  # Run for 30 seconds to capture potential startup errors
        
        # Check if process is still running
        if kill -0 $TRACKER_PID 2>/dev/null; then
          echo "Wallet tracker started successfully"
          kill $TRACKER_PID
        else
          echo "Wallet tracker failed to start"
          exit 1
        fi

    - name: Send Telegram Notification
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          🚨 CRITICAL: Wallet Tracker Deployment FAILED 🚨

          ❌ Workflow Status: ${{ job.status }}
          
          🔍 Detailed Error Information:
          - Workflow: ${{ github.workflow }}
          - Event: ${{ github.event_name }}
          - Repository: ${{ github.repository }}
          - Commit: ${{ github.sha }}

          🕒 Timestamp: $(date +'%Y-%m-%d %H:%M:%S')

          🛠 Recommended Actions:
          1. Check GitHub Actions logs
          2. Review recent code changes
          3. Verify environment configurations

          Link to Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
